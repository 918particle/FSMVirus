#Plan:
def plan(fileoutName,virusPlotName,runNumber):
	fileTitle = fileoutName+str(runNumber)+".dat"
	fileTitle2 = virusPlotName+str(runNumber)
	operator = Operate(CoordinateSystem(),[FSM(50,50)])
	reporter = Report(operator,fileTitle,fileTitle2,[0,0.1,0.2,0.3,0.4,0.5])
	reinfect_points = [275]
	for i in range(constants.N_turns):
		operator.run()
		#Reinfection
		if(i in reinfect_points):
			xc1 = randint(constants.cs_minX,constants.cs_maxX-1)
			yc1 = randint(constants.cs_minY,constants.cs_maxY-1)
			operator.insert_fsm(xc1,yc1)
			xc1 = randint(constants.cs_minX,constants.cs_maxX-1)
			yc1 = randint(constants.cs_minY,constants.cs_maxY-1)
			operator.insert_fsm(xc1,yc1)
		reporter.update()
		reporter.reveal_virus(i)
	reporter.output()


#Constants
#Space variables
cs_minX = 0 #Minimum zero
cs_maxX = 100
cs_minY = 0 #Minimum zero
cs_maxY = 100
#Numerical constants
N_turns = 1000 #Total turns in the run
N_food = 100 #Shut off food
N_food2 = 280 #Turn on food
N_food3 = 290 #No change
N_food4 = 460 #Shut down

#In operate.py, susceptibility
#Handle susceptibility
		if(self.turn_count<constants.N_food):
			self.main_coordinate_system.generate_food()
		if(self.turn_count>constants.N_food and self.turn_count<constants.N_food2):
			self.main_coordinate_system.remove_food()
		if(self.turn_count>constants.N_food2 and self.turn_count<constants.N_food3):
			self.main_coordinate_system.generate_food()
		if(self.turn_count>constants.N_food4):
			self.main_coordinate_system.remove_food()
